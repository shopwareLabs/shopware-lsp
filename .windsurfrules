# Shopware LSP Development Guidelines

## Build Commands
- Build: `go build`
- Test all: `go test ./...`
- Test single package: `go test ./internal/feature`
- Test with race detection: `go test -race ./...`
- Lint (install golangci-lint if needed): `golangci-lint run`

## Code Style
- Follow standard Go formatting: use `gofmt` or `goimports`
- Import order: standard library, external packages, internal packages
- Use explicit error handling, no panics in production code
- Function naming: CamelCase (PascalCase for exports, camelCase for private)
- Variable naming: short but descriptive, camelCase
- Tests: use testify/assert and testify/require, no mocks
- Context: use t.Context() in tests, t.TempDir() for temporary directories

## Error Handling
- Return errors, don't log and continue
- Use descriptive error messages with context
- Wrap errors when adding context
- Check all errors from external functions

## Project Structure
- Keep packages small and focused on a single responsibility
- Favor composition over inheritance
- Implement interfaces for testability
- Use tree-sitter for parsing different file formats

## Tests

- Don't mock things
- Use testify assert instead of regular if conditions
- Use t.Context for context and t.TempDir for an temporary directory
